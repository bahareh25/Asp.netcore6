// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAsp6Store.ShopUI.Models;

#nullable disable

namespace MyAsp6Store.ShopUI.Migrations
{
    [DbContext(typeof(StorDbContext))]
    partial class StorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LapTop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PC"
                        });
                });

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "this is Apple Iphone 13",
                            Name = "Apple Iphone13",
                            Price = 30000000
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "This is Samsung Galaxy",
                            Name = "Samsung Galaxy",
                            Price = 25000000
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "this is Xiamoi Poco",
                            Name = "Xiamoi Poco",
                            Price = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "This is Asus Laptop",
                            Name = "ZenBook Flip",
                            Price = 40000000
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "This is Asus Laptop",
                            Name = "VivoBook",
                            Price = 50000000
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "This is Asus Laptop",
                            Name = "ASUS Zenbook 14X OLED",
                            Price = 50000000
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "This is Asus Laptop",
                            Name = "ProArt Studiobook 16",
                            Price = 50000000
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "This is Asus Pc",
                            Name = "ASUS ProArt Display PA278CV",
                            Price = 50000000
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "With a slim 8.5 mm (0.3-inch) profile and tipping the scales at just 800g (1.76 pounds), the MB169B+ is the world’s slimmest and lightest companion display, ideal for a simple on-the-go dual-monitor setup and mobile presentations.",
                            Name = "Sleek and ultra-portable with a Zen-inspired design",
                            Price = 190000000
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "This is Asus PC",
                            Name = "Asus Mini PC",
                            Price = 50000000
                        });
                });

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.OrderDetail", b =>
                {
                    b.HasOne("MyAsp6Store.ShopUI.Models.Order", null)
                        .WithMany("orderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("MyAsp6Store.ShopUI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.Product", b =>
                {
                    b.HasOne("MyAsp6Store.ShopUI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyAsp6Store.ShopUI.Models.Order", b =>
                {
                    b.Navigation("orderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
